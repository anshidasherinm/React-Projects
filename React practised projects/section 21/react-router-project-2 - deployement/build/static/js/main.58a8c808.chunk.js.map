{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/quotes/QuoteList.module.css","lib/api.js","hooks/use-http.js","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","Pages/AllQuotes.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","getAllComments","transformedComments","commentObj","httpReducer","state","action","type","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","MainNavigation","header","logo","nav","to","activeClassName","active","Layout","props","Fragment","main","children","QuoteItem","item","text","author","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","NewQuote","React","lazy","QuoteDetails","NotFound","App","fallback","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.58a8c808.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3qNzB\",\"logo\":\"MainNavigation_logo__rAt7p\",\"nav\":\"MainNavigation_nav__1YCzN\",\"active\":\"MainNavigation_active__24_bE\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2dkCV\",\"sorting\":\"QuoteList_sorting__3mApt\"};","const FIREBASE_DOMAIN = \"https://react-http-c6d26-default-rtdb.firebaseio.com\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: \"data.name \" };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__29pzf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__35iJv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__198-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__tVrVt\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a Qoute\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MainNavigation from \"./MainNavigation\";\r\nconst Layout = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  console.log(location); //{pathname: '/quotes', search: '?sort=asc', hash: '', state: undefined, key: 'dv7dpm'}\n\n  const queryParams = new URLSearchParams(location.search); //will be a key value pair having sort as key\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    // history.push(\"/quotes?sort=asc\"); //so that when button is clicked, link will become this\n    // history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n    // history.push(\n    //   `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    // );\n    //suing an object\n\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n// const DUMMY_QUOTES = [\r\n//   { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n//   { id: \"q2\", author: \"Anshida\", text: \"Learning React is great!\" },\r\n// ];\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h1>All Quotes page</h1>\r\n      <QuoteList quotes={loadedQuotes} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AllQuotes;\r\n","import React, { Suspense } from \"react\";\n\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport AllQuotes from \"./Pages/AllQuotes\";\n//we need to make this newQoute page pnly render wehn user need or click it so for that\n// import NewQuote from \"./Pages/NewQuote\";\n// import NotFound from \"./Pages/NotFound\";\n// import QouteDetails from \"./Pages/QuoteDetails\";\n\nconst NewQuote = React.lazy(() => import(\"./Pages/NewQuote\"));\nconst QuoteDetails = React.lazy(() => import(\"./Pages/QuoteDetails\"));\nconst NotFound = React.lazy(() => import(\"./Pages/NotFound\"));\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Suspense\n          fallback={\n            <div className=\"centered\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/quotes\" />\n            </Route>\n            <Route path=\"/quotes\" exact>\n              {/* exact is given to make allqoutes donot come when qoute details are called */}\n              <AllQuotes />\n            </Route>\n            <Route path=\"/quotes/:quoteId\">\n              <QuoteDetails />\n            </Route>\n            <Route path=\"/new-quote\">\n              <NewQuote />\n            </Route>\n            {/* the below route must only come last because , there is a star which  means any */}\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}